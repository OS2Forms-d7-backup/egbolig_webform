<?php
/**
 * @file
 * Code for the Egbolig webform feature.
 */

include_once 'egbolig_webform.features.inc';

module_load_include('inc', 'egbolig_webform', 'includes/egbolig_webform.webservice');

/**
 * Implements hook_menu().
 */
function egbolig_webform_menu() {
  $items['admin/config/system/egbolig'] = array(
    'title' => t('Configure EGbolig'),
    'description' => t('Configure EGbolig settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('egbolig_webform_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function egbolig_webform_settings() {
  $form = array();

  $form['soap_webservice'] = array(
    '#type' => 'textfield',
    '#title' => 'Webservice URL',
    '#required' => TRUE,
    '#default_value' => variable_get('soap_webservice', NULL),
    '#description' => 'http://egboligws.ballerup.dk/services/service10632.svc?wsdl',
  );

  return system_settings_form($form);
}

function egbolig_webform_get_previous_submission_message($form, $form_state) {
  global $base_root;
  $cpr = $form_state['values']['submitted']['row1']['col1']['basic_data']['cpr'];

  $member = egbolig_webform_ws_get_member_by_cpr($cpr);

  $message = '';
  if ($member) {
    $edit_link = l(t('Edit'), $base_root . $form['#action'], [
      'query' => ['cpr' => $cpr],
      'attributes' => ['target' => '_blank']
    ]);
    $message = "<p>Submission for $cpr exists. $edit_link / Delete it</p>";
  }
  $command = ajax_command_html('#js-previous-submission-message', $message);

  return array('#type' => 'ajax', '#commands' => [$command]);
}

function egbolig_webform_form_alter(&$form, &$form_state, $form_id, $cpr = NULL) {
  //cannot fully use $form_id as it's dependent on node ID
  if (strpos($form_id, 'webform_client_form') > -1) {
    if ($form['#node']->type == 'webform' && $form['#node']->title == 'EG-Bolig ansÃ¸gningsskema') {
      $form['#attached']['css'][] = drupal_get_path('module', 'egbolig_webform') . '/css/egbolig_webform.css';
      $cpr = $_GET['cpr'];
      if ($cpr) {
        //TODO: add security check that this user can access this CPR submitted data
        $member = egbolig_webform_ws_get_member_by_cpr($cpr);
        if ($member) {
          //saving for integrity
          $form_state['hashcode'] = md5($cpr);

          $form['submitted']['row1']['col1']['basic_data']['cpr']['#default_value'] = $cpr;
          $form['submitted']['row1']['col1']['basic_data']['cpr']['#attributes']['disabled'] = 'disabled';

          $form['submitted']['row1']['col1']['basic_data']['name']['#default_value'] = $member->Name;
          $form['submitted']['row1']['col1']['basic_data']['phone_nr']['#default_value'] = $member->HomePhone;
          $form['submitted']['row1']['col1']['basic_data']['addresse']['#default_value'] = $member->Address;
          $form['submitted']['row1']['col1']['basic_data']['telefonnummer_mobil']['#default_value'] = $member->MobilePhone;
          $form['submitted']['row1']['col1']['basic_data']['c_o_addresse']['#default_value'] = $member->CoAddress;
          $form['submitted']['row1']['col1']['basic_data']['post_nr___by']['#default_value'] = $member->PostalCodeCity;

          $form['submitted']['row6']['col61']['additional_info']['row61']['col62']['husleje_min']['#default_value'] = $member->MinimumRent;
          $form['submitted']['row6']['col61']['additional_info']['row61']['col62']['husleje_max']['#default_value'] = $member->MaximumRent;
        }
      }
      else {
        $form['submitted']['row0']['col0']['previous_submission_message']['#prefix'] = '<div id="js-previous-submission-message">';
        $form['submitted']['row0']['col0']['previous_submission_message']['#suffix'] = '</div>';

        //adding ajax listener to CPR field
        $form['submitted']['row1']['col1']['basic_data']['cpr']['#ajax'] = array(
          'event' => 'blur',
          'callback' => 'egbolig_webform_get_previous_submission_message',
          'effect' => 'fade',
          'progress' => array('type' => 'none')
        );
      }

      $form['#submit'][] = 'egbolig_webform_synch_submission';
    }
  }
}

function egbolig_webform_synch_submission($form, &$form_state) {
  $cpr = $form_state['values']['submitted'][_egbolig_webform_get_webform_cid($form_state['webform']['component_tree']['children'], 'cpr')];

  //updating submission
  if (isset($form_state['hashcode'])) {
    if ($form_state['hashcode'] === md5($cpr)) {
      try {
        $member = egbolig_webform_ws_get_member_by_cpr($cpr);
        $member = egbolig_webform_populate_member($member, $form_state);
        egbolig_webform_ws_update_member($member);

        drupal_set_message('Submission synched');
      } catch (Exception $e) {
        watchdog('EGBolig Webservice', $e->getMessage(), array(), WATCHDOG_ERROR);

        drupal_set_message('Could not synch the submission, see log', 'warning');
      }
    }
    else {
      //TODO: abort submission
      drupal_set_message(t('Integrity of the form is broken'), 'error');
    }
  }
  // new submission
  else {
    try {
      $member = egbolig_webform_populate_member(NULL, $form_state);
      egbolig_webform_ws_create_member($member);

      //getting the member and updating if with the
      $member = egbolig_webform_ws_get_member_by_cpr($cpr);
      $member = egbolig_webform_populate_member($member, $form_state);
      egbolig_webform_ws_update_member($member);

      drupal_set_message('Submission created');
    } catch (Exception $e) {
      watchdog('EGBolig Webservice', $e->getMessage(), array(), WATCHDOG_ERROR);
      drupal_set_message('Could not create the submission, see log', 'warning');
    }
  }
}